{"version":3,"sources":["webpack:///./src/components/miniPost/MiniPost.tsx","webpack:///./src/pages/index.tsx"],"names":["Container","BlogLink","Link","Date","Title","TimeToRead","Text","MiniPost","props","node","data","key","id","to","fields","slug","frontmatter","date","title","timeToRead","spoiler","query","Intro","P","Main","Layout","allMarkdownRemark","edges","map","index"],"mappings":"2IAIMA,EAAY,mBAAH,mBAAG,CAAH,mwBA0DTC,EAAW,YAAOC,IAAP,qBAAH,gDAIRC,EAAO,qBAAH,mBAAG,CAAH,8HAUJC,EAAQ,mBAAH,mBAAG,CAAH,oLAiBLC,EAAa,oBAAH,mBAAG,CAAH,wHAQVC,EAAO,iBAAH,mBAAG,CAAH,wFAwBGC,EAA8B,SAAAC,GAAS,IACpCC,EAASD,EAAfE,KACR,OAAO,YAACV,EAAD,CAAWW,IAAKF,EAAKG,IAC1B,YAACX,EAAD,CAAUY,GAAIJ,EAAKK,OAAOC,MACxB,YAAC,EAAD,KAAON,EAAKO,YAAYC,MACxB,YAACb,EAAD,KACE,sBAAKK,EAAKO,YAAYE,MAAO,KAC7B,YAACb,EAAD,WAAgBI,EAAKU,WAArB,SAEF,YAACb,EAAD,KAAOG,EAAKO,YAAYI,Y,sCChIvB,IAAMC,EAAQ,aAuBfC,EAAQ,mBAAH,oBAAG,CAAH,kDAQLC,EAAI,iBAAH,oBAAG,CAAH,kIASDC,EAAO,mBAAH,oBAAG,CAAH,mEAKK,sBAAc,IAAXd,EAAW,EAAXA,KAChB,OAAO,YAACe,EAAA,EAAD,KACL,YAACH,EAAD,KACE,YAACC,EAAD,+CACA,YAACA,EAAD,sFAEF,YAACC,EAAD,KAEE,uBACGd,EAAKgB,kBAAkBC,MAAMC,KAAI,WAAWC,GAAX,IAAGpB,EAAH,EAAGA,KAAH,OAAsB,YAAC,EAAD,CAAUE,IAAKkB,EAAOnB,KAAMD","file":"component---src-pages-index-tsx-c52a4dd18e227cfe5c98.js","sourcesContent":["import React, { FC } from \"react\"\nimport styled from \"@emotion/styled\"\nimport { Link } from \"gatsby\"\n\nconst Container = styled.div`\n  background: transparent;\n  border-radius: 10px;\n  box-sizing: border-box;\n  margin-bottom: 30px;\n  padding: 20px;\n  position: relative;\n  :before {\n      background: linear-gradient(to right, var(--purple), var(--pink));\n      border-radius: 4px;\n      content: '';\n      height: 0;\n      left: 25%;\n      position: absolute;\n      top: 50%;\n      transition: all 500ms ease-in-out;\n      width: 50%;\n      z-index: -1;\n    }\n  \n  &:hover {\n    cursor: pointer;\n    transition: all 300ms ease-in-out;\n  \n    small {\n      text-decoration: underline;\n    }\n  \n    :before {\n      background: linear-gradient(to right, var(--purple), var(--pink));\n      border-radius: 8px;\n      content: '';\n      position: absolute;\n      top: 69px;\n      left: 0;\n      height: 50%;\n      width: 100%;\n      transition: all 200ms ease-out;\n      opacity: .6;\n      z-index: -1;\n    }\n    \n    h2 {\n      color: var(--white);\n      text-decoration: underline;\n    }\n    \n    span {\n      color: var(--pale-grey)\n    }\n    \n    &:active, :focus {\n      transform: translateX(500px);\n      opacity: 0;\n    }\n  }\n`\n\nconst BlogLink = styled(Link)`\n  text-decoration: none;\n`\n\nconst Date = styled.small`\n  color: var(--grey);\n  font-family: 'Georgia', serif;\n  font-style: italic;\n  \n  :hover {\n  text-decoration: underline;\n  }\n`\n\nconst Title = styled.div`\n  color: var(--pink);\n  display: flex;\n  align-items: center;\n  font-size: 26px;\n  margin: 3px 0 6px;\n  \n  h2 {\n    font-size: 1.3em;\n    margin: 0;\n  }\n  \n  @media (max-width: 890px) {\n    font-size: 20px;\n  }\n`\n\nconst TimeToRead = styled.span`\n  color: var(--purple);\n  font-family: 'Georgia', serif;\n  font-size: .8em;\n  width: 100px;\n  margin-left: 10px;\n`\n\nconst Text = styled.p`\n  color: var(--pale-grey);\n  font-family: 'Georgia', serif;\n  margin: 0;\n`\n\nexport interface MiniPostProps {\n  data: NodeModel;\n}\n\ninterface NodeModel {\n  id: string;\n  fields: {\n    slug: string;\n  }\n  frontmatter: {\n    title: string;\n    date: string;\n    spoiler: string;\n  }\n  timeToRead: string;\n  excerpt: string;\n}\n\nexport const MiniPost: FC<MiniPostProps> = props => {\n  const { data: node } = props\n  return <Container key={node.id}>\n    <BlogLink to={node.fields.slug}>\n      <Date>{node.frontmatter.date}</Date>\n      <Title>\n        <h2>{node.frontmatter.title}{\" \"}</h2>\n        <TimeToRead> / {node.timeToRead} min</TimeToRead>\n      </Title>\n      <Text>{node.frontmatter.spoiler}</Text>\n    </BlogLink>\n  </Container>\n}\n","import React from \"react\"\nimport { Layout } from \"../components/Layout\"\nimport styled from \"@emotion/styled\"\nimport { graphql } from \"gatsby\"\nimport { MiniPost } from \"../components/miniPost/MiniPost\"\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            spoiler\n          }\n          timeToRead\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n\nconst Intro = styled.div`\n  margin: 10px 20px 30px;\n  \n  //@media (max-width: 790px) {\n  //  margin: 0 0 30px;\n  //} \n`\n\nconst P = styled.p`\n  color: var(--grey);\n  font-family: 'Georgia', sans-serif;\n  font-style: italic;\n  opacity: .8;\n  padding: 3px 0;\n  margin: 0;\n`\n\nconst Main = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n`\n\nexport default ({ data }) => {\n  return <Layout>\n    <Intro>\n      <P>Hola! I'm Ose, a Full Stack developer.</P>\n      <P>This is my personal blog, where I write about all things web and not so web.</P>\n    </Intro>\n    <Main>\n      {/*<h2>{data.allMarkdownRemark.totalCount} Posts so far...</h2>*/}\n      <div>\n        {data.allMarkdownRemark.edges.map(({ node }, index) => (<MiniPost key={index} data={node}/>))}\n      </div>\n    </Main>\n  </Layout>\n}\n"],"sourceRoot":""}