{"version":3,"sources":["webpack:///./src/components/miniPost/MiniPost.tsx","webpack:///./src/templates/TagsPage.tsx"],"names":["Container","BlogLink","Link","Date","Title","TimeToRead","Text","MiniPost","node","data","id","timeToRead","slug","fields","frontmatter","title","date","spoiler","isMobile","useMedia","key","to","Header","Ul","Li","Tags","pageContext","tag","allMarkdownRemark","edges","totalCount","tagHeader","map","query"],"mappings":"6LAKMA,EAAY,mBAAH,mBAAG,CAAH,uyBA8DTC,EAAW,YAAOC,IAAP,qBAAH,gDAIRC,EAAO,qBAAH,mBAAG,CAAH,8HAUJC,EAAQ,mBAAH,mBAAG,CAAH,oLAiBLC,EAAa,oBAAH,mBAAG,CAAH,wHAQVC,EAAO,iBAAH,mBAAG,CAAH,wFAwBGC,EAA8B,SAAC,GAAmB,IAAXC,EAAW,EAAjBC,KACpCC,EAA4EF,EAA5EE,GAAIC,EAAwEH,EAAxEG,WAAsBC,EAAkDJ,EAA5DK,OAAUD,KAD2B,EACuBJ,EAA1CM,YAAeC,EADI,EACJA,MAAOC,EADH,EACGA,KAAMC,EADT,EACSA,QAChEC,EAAWC,YAAS,sBAE1B,OAAO,YAACnB,EAAD,CAAWoB,IAAKV,GACrB,YAACT,EAAD,CAAUoB,GAAIT,GACZ,YAACT,EAAD,KAAOa,GACP,YAACZ,EAAD,KACE,sBAAKW,EAAO,MACVG,GAAY,YAACb,EAAD,WAAgBM,EAAhB,SAEhB,YAACL,EAAD,KAAOW,O,2JCtIPK,EAAS,kBAAH,oBAAG,CAAH,4CAoBNC,GAhBQ,mBAAH,oBAAG,CAAH,kKAgBA,kBAAH,oBAAG,CAAH,kDAIFC,EAAK,kBAAH,oBAAG,GAEE,qBAAH,oBAAG,CAAH,8HAUS,oBAAH,oBAAG,CAAH,uHAyCDC,UArBiB,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,YAAajB,EAAW,EAAXA,KAEtCkB,GADSR,YAAS,sBACVO,EAARC,KAFiD,EAG3BlB,EAAKmB,kBAA3BC,EAHiD,EAGjDA,MAAOC,EAH0C,EAG1CA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,UAELH,EAEV,OAAO,YAAC,IAAD,KACL,YAACL,EAAD,KAASS,GACT,YAACR,EAAD,KACGM,EAAMG,KAAI,YAAc,IAAXxB,EAAW,EAAXA,KACJI,EAASJ,EAAKK,OAAdD,KACR,OAAO,YAACY,EAAD,CAAIJ,IAAKR,GACd,YAAC,IAAD,CAAUH,KAAMD,WASnB,IAAMyB,EAAQ","file":"component---src-templates-tags-page-tsx-9a23b6d3c68b0fea2abf.js","sourcesContent":["import React, { FC } from \"react\"\nimport styled from \"@emotion/styled\"\nimport { Link } from \"gatsby\"\nimport useMedia from \"../../utils/useMedia\"\n\nconst Container = styled.div`\n  background: transparent;\n  border-radius: 10px;\n  box-sizing: border-box;\n  margin-bottom: 30px;\n  padding: 20px;\n  position: relative;\n  :before {\n      background: linear-gradient(to right, var(--purple), var(--pink));\n      border-radius: 4px;\n      content: '';\n      height: 0;\n      left: 25%;\n      position: absolute;\n      top: 50%;\n      transition: all 500ms ease-in-out;\n      width: 50%;\n      z-index: -1;\n    }\n  \n  &:hover {\n    cursor: pointer;\n    transition: all 300ms ease-in-out;\n  \n    small {\n      text-decoration: underline;\n    }\n  \n    :before {\n      background: linear-gradient(to right, var(--purple), var(--pink));\n      border-radius: 8px;\n      content: '';\n      position: absolute;\n      top: 69px;\n      left: 0;\n      height: 64%;\n      width: 100%;\n      transition: all 200ms ease-out;\n      opacity: .6;\n      z-index: -1;\n      \n      @media (max-width: 960px) {\n        top: 65px;\n      }\n    }\n    \n    h2 {\n      color: var(--white);\n      text-decoration: underline;\n    }\n    \n    span {\n      color: var(--pale-grey)\n    }\n    \n    &:active, :focus {\n      transform: translateX(500px);\n      opacity: 0;\n    }\n  }\n`\n\nconst BlogLink = styled(Link)`\n  text-decoration: none;\n`\n\nconst Date = styled.small`\n  color: var(--grey);\n  font-family: 'Georgia', serif;\n  font-style: italic;\n  \n  :hover {\n  text-decoration: underline;\n  }\n`\n\nconst Title = styled.div`\n  color: var(--pink);\n  display: flex;\n  align-items: center;\n  font-size: 26px;\n  margin: 3px 0 6px;\n  \n  h2 {\n    font-size: 1.3em;\n    margin: 0;\n  }\n  \n  @media (max-width: 890px) {\n    font-size: 20px;\n  }\n`\n\nconst TimeToRead = styled.span`\n  color: var(--purple);\n  font-family: 'Georgia', serif;\n  font-size: .8em;\n  width: 100px;\n  margin-left: 10px;\n`\n\nconst Text = styled.p`\n  color: var(--pale-grey);\n  font-family: 'Georgia', serif;\n  margin: 0;\n`\n\nexport interface MiniPostProps {\n  data: NodeModel;\n}\n\ninterface NodeModel {\n  id: string;\n  fields: {\n    slug: string;\n  }\n  frontmatter: {\n    title: string;\n    date: string;\n    spoiler: string;\n  }\n  timeToRead: string;\n  excerpt: string;\n}\n\nexport const MiniPost: FC<MiniPostProps> = ({ data: node }) => {\n  const { id, timeToRead, fields: { slug }, frontmatter: { title, date, spoiler } } = node\n  const isMobile = useMedia(\"(max-width: 960px)\")\n\n  return <Container key={id}>\n    <BlogLink to={slug}>\n      <Date>{date}</Date>\n      <Title>\n        <h2>{title}{\" \"}</h2>\n        {!isMobile && <TimeToRead> / {timeToRead} min</TimeToRead>}\n      </Title>\n      <Text>{spoiler}</Text>\n    </BlogLink>\n  </Container>\n}\n","import React, { FC } from \"react\"\nimport { Layout } from \"../components/Layout\"\nimport { graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport useMedia from \"../utils/useMedia\"\nimport { MiniPost } from \"../components/miniPost/MiniPost\"\n\nconst Header = styled.h2`\n  font-size: 1.3em;\n`\n\nconst Title = styled.div`\n  color: var(--pink);\n  display: flex;\n  align-items: center;\n  font-size: 26px;\n  margin: 3px 0 6px;\n  \n  a {\n    margin: 0;\n  }\n  \n  @media (max-width: 890px) {\n    font-size: 20px;\n  }\n`\n\nconst Ul = styled.ul`\n  list-style-type: none;\n`\n\nconst Li = styled.li``\n\nconst Date = styled.small`\ncolor: var(--grey);\n  font-family: 'Georgia', serif;\n  font-style: italic;\n  \n  :hover {\n  text-decoration: underline;\n  }\n`\n\nconst TimeToRead = styled.span`\n  color: var(--purple);\n  font-family: 'Georgia', serif;\n  font-size: .6em;\n  width: 100px;\n  margin-left: 10px;\n`\n\nexport interface TagsPageProps {\n  pageContext: {\n    tag: string;\n  };\n  data: {\n    allMarkdownRemark: {\n      edges: any[];\n      totalCount: number\n    }\n  };\n}\n\nconst Tags: FC<TagsPageProps> = ({ pageContext, data }) => {\n  const isMobile = useMedia(\"(max-width: 960px)\")\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } about ${tag}`\n\n  return <Layout>\n    <Header>{tagHeader}</Header>\n    <Ul>\n      {edges.map(({ node }) => {\n        const { slug } = node.fields\n        return <Li key={slug}>\n          <MiniPost data={node}/>\n        </Li>\n      })}\n    </Ul>\n  </Layout>\n}\n\nexport default Tags\n\nexport const query = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          timeToRead\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date\n            spoiler\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}